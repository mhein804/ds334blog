[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/BlogPost1/index.html",
    "href": "posts/BlogPost1/index.html",
    "title": "Blog Post 1",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nrichmondway &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-26/richmondway.csv')\n\nRows: 34 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Character, Season_Episode, Dating_flag, Coaching_flag\ndbl (12): Episode_order, Season, Episode, F_count_RK, F_count_total, cum_rk_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nFor my first blog post I found a data set on the popular TV series Ted Lasso. One of the most popular characters in the show is Roy Kent, who is known for his colorful vocabulary. This data set contains multiple variables about Kent’s use of the “F bomb”. For my project I used the season and episode variables as well as the total “F_cout” for each episode. I also used the variable Imdb_rating which shows the Imdb rating given to each episode. I was interested in both how Kent’s “F_count” changed over the seasons, and how the amout of “F_count” impacted the Imdb rating of each episode. I located my data through the following link. https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-09-26/readme.md\n\nggplot(richmondway, aes(x = Episode, y = F_count_RK))+\n  geom_point(color = \"blue\")+\n  geom_segment(aes(xend = Episode, y = 0, yend = F_count_RK))+\n  facet_wrap(~Season)+\n  coord_flip()+\n  theme(panel.grid.major.x = element_blank())+\n  theme_minimal()+\n  labs(title = \"Graph of Roy Kent's F_count Across All Season\", x = \"Number of F words\", y = \"Episode Number\")\n\n\n\n\nFrom this vizulizatoin we can see how Roy Kent’s “F-count” changes throughout the seasons. We can see as the seasons continue Kent says more and more “F bombs”. The third season appears to have highest overall “F_count”, but two episodes in season two have the highest “F_count” for an episode with a little over 20.\n\nclass(richmondway$Season)\n\n[1] \"numeric\"\n\nrichmondway &lt;- richmondway |&gt; mutate(Season_factor = as.factor(Season))\n\nggplot(richmondway, aes(x = F_count_RK, y = Imdb_rating))+\n  geom_point(aes(color = Season_factor)) +\n  theme_minimal()+\n  labs(title = \"IMDB Rating vs F_count for Roy Kent\", x = \"F Bombs Said by Roy Kent\", y = \"Imdb Rating\")\n\n\n\n\nIn this graph we can see the relationship between an episodes Imdb rating and Roy Kent’s “F_count”. Each dot represents an episode, adn they are colored by which season the episode occured in. There does not appear to be much of a clear correlation between “F_count” and IMDB rating, however I do want to note that the two episdoes from season 2 with over 20 “F_count” both scored above a 8.75 on IMDB.\nConclusions:\nIf I had more time with this data I would like to look more into two indicator variables in the data set. These variables denote whether or not Kent was in a relationship as the time of the episode, and if he was coaching the team at the time of them episode. I think it would be interesting to see how these indicator variables effect the “F_count” across the seasons.\nWrap Up:\nBoth of the graphs I created are free of visual clutter, and have color schemes that are easy on the eye and readable. My lollipop graph is faceted to better show the difference between seasons, as having all the seasons in one graph would get messy. For my second graph I was able to color by season as the points to not overlap and are not too close together."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/test_post/index.html",
    "href": "posts/test_post/index.html",
    "title": "Post Test",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\nggplot(data = penguins, aes(x = bill_length_mm))+\n  geom_histogram(color = \"black\", fill = \"white\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ds334blog",
    "section": "",
    "text": "Blog Post 1\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 9, 2024\n\n\nMathias Heinz\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2024\n\n\nMathias Heinz\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2024\n\n\nMathias Heinz\n\n\n\n\n\n\n  \n\n\n\n\nPost Test\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2024\n\n\nMathias Heinz\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]